// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleIndex.Models;

namespace PeopleIndex.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220606155636_AddedCountry")]
    partial class AddedCountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PeopleIndex.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Stockholm"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Göteborg"
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Malmö"
                        });
                });

            modelBuilder.Entity("PeopleIndex.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Sweden"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Denmark"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "Norway"
                        });
                });

            modelBuilder.Entity("PeopleIndex.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Halmstad",
                            Name = "Christian",
                            PhoneNumber = "0123456789"
                        },
                        new
                        {
                            Id = 2,
                            City = "Halmstad",
                            Name = "Billy",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 3,
                            City = "Stockholm",
                            Name = "Adam",
                            PhoneNumber = "3456789012"
                        },
                        new
                        {
                            Id = 4,
                            City = "Göteborg",
                            Name = "Dennis",
                            PhoneNumber = "3478956012"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
